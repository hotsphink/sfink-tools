#  2 =   0x2 - enable control of console logging level
#  4 =   0x4 - enable control of keyboard (SAK, unraw)
#  8 =   0x8 - enable debugging dumps of processes etc.
# 16 =  0x10 - enable sync command
# 32 =  0x20 - enable remount read-only
# 64 =  0x40 - enable signalling of processes (term, kill, oom-kill)
#128 =  0x80 - allow reboot/poweroff
#256 = 0x100 - allow nicing of all RT tasks
kernel.sysrq = 0xfe

# Transparent huge pages have been known to murder the system when
# copying large stuff to USB because some random allocation triggers a
# synchronous writeback to free up enough contiguous pages to make a
# hugepage, whether or not the allocator cares.
#
# https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#thp-sysfs
kernel.mm.transparent_hugepage.defrag = defer+madvise

# Another source for USB copy triggered freezes. The default dirty
# bytes values are based on percentage of memory, which with lots of
# memory and a slow device, can translate to very long pauses.
#
# https://unix.stackexchange.com/questions/107703/why-is-my-pc-freezing-while-im-copying-a-file-to-a-pendrive/107722#107722
vm.dirty_background_bytes = 0x1000000
vm.dirty_bytes = 0x4000000
