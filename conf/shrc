# This file is normally loaded via `source ~/path/to/sfink-tools/conf/shrc`
# from .zshrc/.bashrc/whatever.

# `mc <suffix>`: Set MOZCONFIG to the current hg root's mozconfig.<suffix>
# file. If the file does not exist, will ask if you want to use the most
# recently edited one from a sibling directory.
#
function mc () {
    if [ $# = 0 ]; then
        { echo -n "MOZCONFIG is " >&2; echo "${MOZCONFIG:-unset}" }
    fi
    if [ $# = 0 ] || [[ $1 = "-l" ]]; then
        if [ -z "$MOZCONFIG" ]; then
            local n
            n=0
            for f in $(ls "$(hg root)" | fgrep mozconfig. | fgrep -v '~'); do
                [ $n -eq 0 ] && echo "available:"
                n=$(( $n + 1 ))
                echo "  ${f#*mozconfig.}"
            done
            [ $n -eq 0 ] && echo "no mozconfig.* files available in $(hg root)"
        fi
        return
    fi

    local mozconfig
    mozconfig="$(hg root)/mozconfig.$1"
    if ! [ -f "$mozconfig" ]; then
        echo "Warning: $mozconfig does not exist" >&2
        local tmp
        tmp=$(ls -tr "$(dirname "$(hg root)")"/*/mozconfig.$1 | tail -1)
        if [ -z "$tmp" ]; then
            echo "No mozconfig.$1 found" >&2
            return
        fi
        echo -n "Use $tmp? (y/n) " >&2
        read REPLY
        if [[ "${REPLY#y}" == "$REPLY" ]]; then
            return
        fi
        echo "Copying $tmp to "$(hg root)""
        cp "$tmp" "$(hg root)"
        mozconfig="$(hg root)/mozconfig.$1"
    fi
    export MOZCONFIG="$mozconfig"
    { echo -n "MOZCONFIG is now " >&2; echo "$MOZCONFIG" }
}

function reconnect() {
    eval $(re-ssh-agent)
    export DISPLAY=localhost:10.0 # TEMPORARY HACK
}
