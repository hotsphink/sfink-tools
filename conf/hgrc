[ui]
username = Steve Fink <sfink@mozilla.com>
###merge = kdiff3
#traceback = True
#verbose = True
#debug = True
interface = curses
interface.histedit = curses
mergemarkers = detailed

# Change the default of various commands. See https://www.mercurial-scm.org/wiki/FriendlyHGPlan
tweakdefaults = true

[defaults]
#commit = -v
diff = -U 8 -p
qdiff = -U 8 -p
qnew = -U
qexport = -v
qbackout = -U
next = --evolve

[phases]
publishing = False

[format]
generaldelta = True

[mq]
secret = False
keepchanges = True

[mqext]
mqcommit = auto

[patch]
maxfuzz = 10

[extensions]
# Basic functionality improvements
progress =

# Standard additional commands
mq =
record =
rebase =
relink =
graphlog =
convert =
parentrevspec =
transplant =
purge =
share =
histedit =
shelve =
hggit = ~/lib/hg/hg-git/hggit
show =
absorb =

# Additional functionality
fsmonitor =
blackbox =
journal =

# Nonstandard additional commands
qbackout = ~/lib/version-control-tools/hgext/qbackout/
mqext = ~/lib/version-control-tools/hgext/mqext
#crecord = ~/lib/hg/crecord/crecord
#crecord = ~/lib/hg/crecord-upstream/crecord
evolve = ~/lib/hg/evolve/hgext3rd/evolve
topic = ~/lib/hg/evolve/hgext3rd/topic
hgsubversion = ~/lib/hg/hgsubversion/hgsubversion

# Facebook stuff
# smartlog = ~/lib/hg/hg-experimental/hgext3rd/smartlog.py
# githelp = ~/lib/hg/hg-experimental/hgext3rd/githelp.py
#chistedit = ~/lib/hg/hg-experimental/hgext3rd/chistedit.py

# Mozilla/bugzilla/tryserver integration
#qimportbz = ~/.mozbuild/version-control-tools/hgext/qimportbz
qimportbz = ~/lib/version-control-tools/hgext/qimportbz
bzexport = ~/lib/version-control-tools/hgext/bzexport/
trychooser = ~/lib/hg/trychooser/
mozext = ~/lib/version-control-tools/hgext/mozext/
# reviewboard = ~/lib/version-control-tools/hgext/reviewboard/client.py

# Note: if I use the .mozbuild version, it seems to get confused between
#mozhg/util.py versions from ~/lib and ~/.mozbuild.
# firefoxtree = ~/.mozbuild/version-control-tools/hgext/firefoxtree
firefoxtree = ~/lib/version-control-tools/hgext/firefoxtree

format-source = ~/.mozbuild/version-control-tools/hgext/format-source
push-to-try = ~/.mozbuild/version-control-tools/hgext/push-to-try

[alias]
##################### aliases I actually use #####################

ts = treestatus
view = qshow
s = qseries -v

ls = ![[ -n "$1" ]] && r="$1" || r=.; $HG log -r "with_parents(::$r and not public())" --template list
sl = ls

lg = log --template list --graph

lsb = log -r 'bookmark() and not public()' -T '{pad("{bookmarks}", 30)} {desc|firstline}\n'

lst = topics --age

che = chistedit -r 'not public() and ancestors(.)'
he = histedit -r 'not public() and ancestors(.)'

advance = !while $HG next --evolve; do :; done

geckoversion = !$HG cat -r $1 'path:config/milestone.txt' | tail -1

lsbranch = ![[ -n "$1" ]] && r="$1" || r=.; $HG log -r "with_parents((::$r + descendants($r)) and not public())" --template list

######### aliases I would use if I remembered they existed #######

file = files "relglob:$1"
phases = log --template='{node|short} {phase} {desc|firstline}\n'
recommit = !$HG uncommit --all && $HG amend -i

interdiff = !set -x; $HG export --hidden $1 > /tmp/left.diff; $HG export --hidden $2 > /tmp/right.diff; interdiff /tmp/left.diff /tmp/right.diff

###### aliases for scenarios that I don't run into anymore ######

# qedit: bring up a text editor on the patch series file, marking applied
# patches as unrearrangable

qedit = !S=$(hg root --mq)/series; cp $S{,.bak} && perl -pale 'BEGIN { chomp(@a = qx(hg qapplied -q)); die if $?; @a{@a}=(); }; s/^/# (applied) / if exists $a{$F[0]}' $S > $S.new && ${EDITOR-vim} $S.new && sed -e 's/^# .applied. //' $S.new > $S

b2t = topics $1 -r 'allbook($1)'

simple_lls = !$HG ls $1 | tac | perl -lne 'print ".~$. $_"' | tac
lls = !$HG ls $1 | tac | perl -lne '$n = $. - 1; print sprintf "%-4s %s", $. < 5 ? "." . "^" x $n : ".~$n", " $_"' | tac

############### aliases I keep around to learn from ##############

# Example invocation:
#    hg git-delete-remote default/bad-branch
gitremotedelete = ! \
    remote=`echo $HG_ARGS | sed 's_/.*__' | sed 's_.* __'`;
    branch=`echo $HG_ARGS | sed 's_.*/__'`;
    remote_url=$($HG paths $remote | sed 's_^git+ssh://__');
    git_dir=$($HG root)/.hg/git;
    # Delete the remote branch
    git --git-dir=$git_dir push $remote_url :$branch;
    # Delete local ref to remote branch
    git --git-dir=$git_dir branch -rd $remote/$branch;
    # Delete local branch
    git --git-dir=$git_dir branch -D $branch
    echo "Don't forget to run "'`'"hg bookmark -d $branch"'`'

# For Callek, really. I use em.
workon = !bash -c 'cd $($HG root) && $EDITOR $($HG status -n -m -a ${1+--change $1})' -- "$@"

# From junw, mostly what evolve does:
# evolve=rebase -r 'orphan()-obsolete()' -d 'max((successors(max(roots(ALLSRC) & ::SRC)^)-obsolete())::)'

########### aliases I no longer use and ought to delete ##########

series = qseries -v
goto = qgoto
touched = qtouched
shortlog = log --template='{node|short}: {desc|firstline}\n'
qlog = log --stat -r qtip:qbase
qcat = !cd $(hg root)/.hg/$(hg qqueue --active) && hg cat -r 'file("$1")$2' $1
qrev = !if [ -n "$1" ]; then hg qref -m "$(hg qheader | perl -lpe 's/$/, r=$1/ if 1..1')"; else echo "reviewer required" >&2; fi; hg qh

list = log --template "{label('changeset.{phase}', '{rev}:{node|short}')} {label('tags.normal', ifeq(tags, '', '', ifeq(tags, 'tip', '', '{tags}\n    ')))}  {desc|firstline}\n"

msg = log -r . --template '{desc}\n'

spew = !$HG export -r 'not public()' | perl -lne '$$r ||= "none"; $$r = $$1 if /^# Node ID (.{12})/; print "$$r $$_"'

# wip = log --graph --rev=wip --template=wip

# Usage: hg enbug <desc> # desc should be oneword
#
# If it doesn't already exist, add a bug number to the commit message. Also
# only if there is no active bookmark already, make a bookmark named after the
# bug, named bug.<bugno>.<desc>
enbug = !msg=$($HG log -r . --template '{desc}\n'); echo "$msg" | grep -q "^Bug" || $HG commit --amend -m "Bug $1 - $msg"; book=$($HG log -r . --template '{activebookmark}\n'); [ -n "$book" ] && $HG book -m "$book" "bug.$1.$book"

yay = !msg="$($HG log -r . --template '{desc}\n'), r=$1"; $HG commit --amend -m "$msg"; echo "$msg"

reb = rebase -d rebase_default
wip = log --graph --rev=wip --template=wip

[revsetalias]
with_parents(s) = parents(s) or s

npkw($1) = not public() and keyword($1)

whichbook($1) = last(descendants($1))
wip = (parents(not public()) or not public() or . or (head() and branch(default))) and (not obsolete() or orphan()^) and not closed() and not (fxheads() - date(-90))

# Where did this come from?
rbhead = heads(descendants((parents(ancestor(ancestors(.) and not public())))) and public())
live = reverse(::. and not public()) + parents(::. and not public())

local = reverse(ancestor(.+inbound)::.)

# I made this one up
workparent = last(ancestors(.) and public())
rebase_default = heads(descendants(workparent) and public())

workheads = heads(descendants(parents(not public() and ancestors(.)) and public()))

my($1) = not public() and $1
lineage(r) = ancestors(r) + descendants(r)

allbook($1) = my(lineage(bookmark($1)))
alltopic($1) = my(lineage(topic($1)))
allbranch($1) = my(lineage($1))

[diff]
git = 1
showfunc = 1
nodates = 1
unified = 8

[paths]
try = ssh://sfink@mozilla.com@hg.mozilla.org/try/
mi = ssh://sfink@mozilla.com@hg.mozilla.org/integration/mozilla-inbound
mc = ssh://sfink@mozilla.com@hg.mozilla.org/mozilla-central
aurora = ssh://sfink@mozilla.com@hg.mozilla.org/releases/mozilla-aurora/
beta = ssh://sfink@mozilla.com@hg.mozilla.org/releases/mozilla-beta/
release = ssh://sfink@mozilla.com@hg.mozilla.org/releases/mozilla-release/
birch = ssh://sfink@mozilla.com@hg.mozilla.org/projects/birch/
cypress = ssh://sfink@mozilla.com@hg.mozilla.org/projects/cypress/
cedar = ssh://sfink@mozilla.com@hg.mozilla.org/projects/cedar/
maple = ssh://sfink@mozilla.com@hg.mozilla.org/projects/maple/
review = https://reviewboard-hg.mozilla.org/autoreview
unified = https://hg.mozilla.org/mozilla-unified
hgmo = ssh://hgmo/users/sfink_mozilla.com/mozilla
hgmoro = https://hg.mozilla.org/users/sfink_mozilla.com/mozilla

[web]
#cacerts = /etc/mercurial/hgrc.d/cacert.pem
cacerts = /etc/pki/tls/certs/ca-bundle.crt
#cacerts = .ssh/mozilla-root.crt

[merge-tools]
#kdiff3.args = --auto --L1 common --L2 pulled --L3 mq $base $local $other -o $output -cs SyncMode=1
kdiff3.executable = ~/bin/kdiff3-wrapper
kdiff3.args = --auto --L1 prepatch --L2 tochange --L3 postpatch $base $local $other -o $output --auto --cs SyncMode=1
kdiff3.gui = True
kdiff3.premerge = True
kdiff3.binary = False

[bugzilla]
url = https://bugzilla.mozilla.org
username = sphink@gmail.com
# apikey in ~/.config/hg/hgrc

[bzexport]
submit-method = moz-phab

update-patch = True
rename-patch = True
unified = 10

# Testing
# dry-run = True

# Testing
#api_server = https://api-dev.bugzilla.mozilla.org/test/latest/
#bugzilla = https://landfill.bugzilla.org/bzapi_sandbox/
#product = FoodReplicator
#component = Salt
#username = sfink@mozilla.com

# Production
#api_server = https://api-dev.bugzilla.mozilla.org/latest/
#bugzilla = https://bugzilla.mozilla.org/

# Staging
#api_server = https://api-dev.bugzilla.mozilla.org/tip/
#bugzilla = https://bugzilla-stage-tip.mozilla.org/
#username = sfink@mozilla.com

[qimportbz]
patch_format = bug-%(bugnum)s-%(desc)s

[mozext]
ircnick = sfink
skip_relbranch_bookmarks = True
disable_local_database = False

[mozilla]
ircnick = sfink

[progress]
delay = 1

[pager]
# display colors when using pager
pager = LESS='RF' less

[hostsecurity]
hg.mozilla.org:fingerprints = sha256:17:38:aa:92:0b:84:3e:aa:8e:52:52:e9:4c:2f:98:a9:0e:bf:6c:3e:e9:15:ff:0a:29:80:f7:06:02:5b:e8:48

[templates]
wip = '{label("wip.branch", if(branches,"{branches} "))}{label(ifeq(graphnode,"x","wip.obsolete","wip.{phase}"),"{rev}:{node|short}")}{label("wip.user", " {author|user}")}{label("wip.tags", if(tags," {tags}"))}{label("wip.tags", if(fxheads," {fxheads}"))}{if(bookmarks," ")}{label("wip.bookmarks", if(bookmarks,bookmarks))}{label(ifcontains(rev, revset("parents()"), "wip.here"), " {desc|firstline}")}'

list = "{label('changeset.{phase}', '{node|short}')} {label('tags.normal', ifeq(tags, '', '', ifeq(tags, 'tip', '', '{tags}\n    ')))}  {desc|firstline} {label('tags.normal', topic)} {label('tags.normal', bookmarks)}\n"

[bundleclone]
prefers = uc2region=us-west-1

[color]
mode = terminfo
#mode = ansi

#Custom colours
color.orange = 202
color.lightyellow = 191
color.darkorange = 220
color.brightyellow = 226

#Colours for each label
log.branch = cyan
log.summary = lightyellow
log.description = lightyellow
log.bookmark = green
log.tag = darkorange
log.graph = blue

changeset.public = orange bold
changeset.secret = blue bold
changeset.draft = brightyellow bold

desc.here = bold blue_background

diff.trailingwhitespace = bold red_background
qseries.applied = yellow bold underline
qseries.unapplied = bold

wip.bookmarks = yellow underline
wip.branch = yellow
wip.draft = green
wip.here = red
wip.obsolete = none
wip.public = blue
wip.tags = yellow
wip.user = magenta

[rebase]
# Turned this off because it can causes topics to disappear during rebase.
# (as of evolve 8.4.0-ish.)
#experimental.inmemory = true

[experimental]
graphshorten = true
worddiff = true

[hggit]
usephases = True

[format-source]
clang-format = /home/sfink/src/mozilla/mach clang-format -assume-filename=$HG_FILENAME -p
clang-format:configpaths = .clang-format, .clang-format-ignore
clang-format:fileext = .cpp, .c, .h
