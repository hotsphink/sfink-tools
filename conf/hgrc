[ui]
###merge = kdiff3
#merge = meld
#merge = :merge3
merge = diffmerge
#merge = :vscode
#merge = code
#traceback = True
#verbose = True
#debug = True
interface = curses
interface.histedit = curses
mergemarkers = detailed

# Change the default of various commands. See https://www.mercurial-scm.org/wiki/FriendlyHGPlan
tweakdefaults = true

[defaults]
#commit = -v
diff = -U 8 -p
qdiff = -U 8 -p
qnew = -U
qexport = -v
qbackout = -U
purge = --no-confirm

[phases]
publishing = False

[format]
generaldelta = True

[mq]
secret = False
keepchanges = True

[mqext]
mqcommit = auto

[patch]
maxfuzz = 10

[extensions]
# Basic functionality improvements
progress =

# Standard additional commands
patchbomb =
#mq =
rebase =
relink =
graphlog =
convert =
transplant =
share =
histedit =
shelve =
hggit = ~/lib/hg/hg-git/hggit
show =
absorb =

# Additional functionality
# fsmonitor =
blackbox =
journal =
extdiff =

# Nonstandard additional commands
#qbackout = ~/lib/version-control-tools/hgext/qbackout/
#mqext = ~/lib/version-control-tools/hgext/mqext
evolve = ~/lib/hg/evolve/hgext3rd/evolve
topic = ~/lib/hg/evolve/hgext3rd/topic
#hgsubversion = ~/lib/hg/hgsubversion/hgsubversion

# Facebook stuff
# smartlog = ~/lib/hg/hg-experimental/hgext3rd/smartlog.py
# githelp = ~/lib/hg/hg-experimental/hgext3rd/githelp.py
#chistedit = ~/lib/hg/hg-experimental/hgext3rd/chistedit.py

# Mozilla/bugzilla/tryserver integration
#qimportbz = ~/.mozbuild/version-control-tools/hgext/qimportbz
#qimportbz = ~/lib/version-control-tools/hgext/qimportbz
#trychooser = ~/lib/hg/trychooser/
mozext = ~/lib/version-control-tools/hgext/mozext/
# Note: uses mozautomation from v-c-t, so after mozext
bzexport = ~/lib/hg/bzexport/
#phabsend-moz = ~/.mozbuild/phabsend-moz/phabricator.py
phabsend-moz = ~/.mozbuild/phabsend-moz/mozphabricator.py
#phabricator =

# Note: if I use the .mozbuild version, it seems to get confused between
#mozhg/util.py versions from ~/lib and ~/.mozbuild.
firefoxtree = ~/.mozbuild/version-control-tools/hgext/firefoxtree

# format-source = ~/.mozbuild/version-control-tools/hgext/format-source
push-to-try = ~/.mozbuild/version-control-tools/hgext/push-to-try
#clang-format = ~/.mozbuild/version-control-tools/hgext/clang-format

# Commented out because if it is not in use, I am getting TypeError: Template.append: cmd must be a string
cmdconvert = ~/lib/hg/cmdconvert

[alias]
##################### aliases I actually use #####################

ls = ![[ -n "$1" ]] && r="$1" || r=.; $HG log -r "with_parents(not public() and ::$r)" --template list
sl = ls

lg = log --template list --graph
lgt = lg -r 'topobranch(.)'
lgtopic = !if [[ -n  "$1" ]]; then $HG lg -r "topic('$1')"; else $HG lg -r 'topic(.)'; fi
lgtt = lgtopic

lst = topics --age

che = chistedit -r 'not public() and ancestors(.)'
he = histedit -r 'not public() and ancestors(.)'

advance = !while $HG next --evolve; do :; done

geckoversion = !$HG cat -r $1 'path:config/milestone.txt' | tail -1

lsbranch = ![[ -n "$1" ]] && r="$1" || r=.; $HG log -r "with_parents((::$r + descendants($r)) and not public())" --template list

entopic = topic -r 'ancestors(.) and not public()'

submit = phabsend
phsend = phabsend
phupdate = phabupdate
phread = phabread
phquery = phabqquery

yeet = phexport

######### aliases I would use if I remembered they existed #######

file = files "relglob:$1"
phases = log --template='{node|short} {phase} {desc|firstline}\n'
recommit = !$HG uncommit --all && $HG amend -i

interdiff = !set -x; $HG export --hidden $1 > /tmp/left.diff; $HG export --hidden $2 > /tmp/right.diff; interdiff /tmp/left.diff /tmp/right.diff

# `hg diffpast 3 .` will look at the interdiff between the predecessor^4 and predecessor^3 of `.`
diffpast = !set -x; n=$1; rev=$2; rrev=$2; while [[ $n -gt 0 ]]; do rrev="$rev"; rev="predecessors($rev)"; n=$(( $n - 1 )); done; $HG --hidden diff --from "$rev" --to "$$rrev"

###### aliases for scenarios that I don't run into anymore ######

# qedit: bring up a text editor on the patch series file, marking applied
# patches as unrearrangable

qedit = !S=$(hg root --mq)/series; cp $S{,.bak} && perl -pale 'BEGIN { chomp(@a = qx(hg qapplied -q)); die if $?; @a{@a}=(); }; s/^/# (applied) / if exists $a{$F[0]}' $S > $S.new && ${EDITOR-vim} $S.new && sed -e 's/^# .applied. //' $S.new > $S

b2t = topics $1 -r 'allbook($1)'

simple_lls = !$HG ls $1 | tac | perl -lne 'print ".~$. $_"' | tac
lls = !$HG ls $1 | tac | perl -lne '$n = $. - 1; print sprintf "%-4s %s", $. < 5 ? "." . "^" x $n : ".~$n", " $_"' | tac

############### aliases I keep around to learn from ##############

# See gitremotedelete in ~/.config/hg/hgrc

# For Callek, really. I use `em`.
workon = !bash -c 'cd $($HG root) && $EDITOR $($HG status -n -m -a ${1+--change $1})' -- "$@"

# From junw, mostly what evolve does:
# evolve=rebase -r 'orphan()-obsolete()' -d 'max((successors(max(roots(ALLSRC) & ::SRC)^)-obsolete())::)'

# Usage: hg enbug <desc> # desc should be oneword
#
# If it doesn't already exist, add a bug number to the commit message. Also
# only if there is no active bookmark already, make a bookmark named after the
# bug, named bug.<bugno>.<desc>
enbug = !msg=$($HG log -r . --template '{desc}\n'); echo "$msg" | grep -q "^Bug" || $HG commit --amend -m "Bug $1 - $msg"; book=$($HG log -r . --template '{activebookmark}\n'); [ -n "$book" ] && $HG book -m "$book" "bug.$1.$book"

amendbug = !msg=$($HG log -r . --template '{desc}\n'); if echo "$msg" | grep -q "^Bug"; then echo "Message already contains bug number"; else $HG amend -m "Bug $1 - $msg" ; fi
ambug = amendbug

yay = !msg="$($HG log -r . --template '{desc}\n'), r=$1"; $HG commit --amend -m "$msg"; echo "$msg"

reb = rebase -d rebase_default
rebase! = rebase -d rebase_default
wip = log --graph --rev=wip --template=wip
smart-annotate = annotate -w --skip ignored_changesets

[revsetalias]
with_parents(s) = parents(s) or s

npkw($1) = not public() and keyword($1)

whichbook($1) = last(descendants($1))
wip = (parents(not public()) or not public() or . or (head() and branch(default))) and (not obsolete() or orphan()^) and not closed() and not (fxheads() - date(-90))

twig($1) = with_parents(descendants(first(not public() and ::$1)))
.twig = twig(.)

# Where did this come from?
rbhead = heads(descendants((parents(ancestor(ancestors(.) and not public())))) and public())
live = reverse(::. and not public()) + parents(::. and not public())

local = reverse(ancestor(.+inbound)::.)

# From IRC
nexttag($1) = first($1:: and tag())

# I made this one up
workparent = last(ancestors(.) and public())
rebase_default = heads(descendants(workparent) and public())

workheads = heads(descendants(parents(not public() and ancestors(.)) and public()))

my($1) = not public() and $1
lineage(r) = ancestors(r) + descendants(r)

allbook($1) = my(lineage(bookmark($1)))
alltopic($1) = my(lineage(topic($1)))
allbranch($1) = my(lineage($1))
topobranch($1) = descendants(my(ancestors($1)))
ignored_changesets = desc("ignore-this-changeset") or extdata(get_ignored_changesets)

# Intended for rebasing a new ministack on top of where it was inserted.
sibling($1) = children(p1($1)) - $1
siblingo($1) = children(p1($1)) + children(allpredecessors($1)) - $1

cousin($1) = last(not public() and (children(ancestors($1)) - ancestors($1)))

[extdata]
get_ignored_changesets = shell:cat `hg root`/.hg-annotate-ignore-revs 2> /dev/null || true

[diff]
git = 1
showfunc = 1
nodates = 1
unified = 8

[paths]
unified = https://hg.mozilla.org/mozilla-unified

[web]
#cacerts = /etc/mercurial/hgrc.d/cacert.pem
cacerts = /etc/pki/tls/certs/ca-bundle.crt
#cacerts = .ssh/mozilla-root.crt

[merge-tools]
#kdiff3.args = --auto --L1 common --L2 pulled --L3 mq $base $local $other -o $output -cs SyncMode=1
kdiff3.executable = ~/bin/kdiff3-wrapper
kdiff3.args = --auto --L1 prepatch --L2 tochange --L3 postpatch $base $local $other -o $output --auto --cs SyncMode=1
kdiff3.gui = True
kdiff3.premerge = True
kdiff3.binary = False

meld.gui = True
meld.executable = /usr/bin/env
meld.args = GDK_BACKEND=x11 meld -o $output $local $base $other

diffmerge.gui = True
diffmerge.executable = diffmerge

vscode.regkey = SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\{EA457B21-F73E-494C-ACAB-524FDE069978}_is1
vscode.regname = DisplayIcon
vscode.args = --wait $output
vscode.binary = False
vscode.gui = True
vscode.checkconflicts = True
vscode.premerge = keep

code.priority = 100
code.premerge = True
code.args = --wait --merge $other $local $base $output

[bugzilla]
url = https://bugzilla.mozilla.org
# apikey in ~/.config/hg/hgrc

[bzexport]
#submit-method = bugzilla

update-patch = True
unified = 10

[qimportbz]
patch_format = bug-%(bugnum)s-%(desc)s

[mozext]
skip_relbranch_bookmarks = True
disable_local_database = False

[progress]
delay = 1

[pager]
# display colors when using pager
pager = LESS='RF' less

[templatealias]
l_normal(s) = label('tags.normal', s)

[templates]
wip = '{label("wip.branch", if(branches,"{branches} "))}{label(ifeq(graphnode,"x","wip.obsolete","wip.{phase}"),"{rev}:{node|short}")}{label("wip.user", " {author|user}")}{label("wip.tags", if(tags," {tags}"))}{label("wip.tags", if(fxheads," {fxheads}"))}{if(bookmarks," ")}{label("wip.bookmarks", if(bookmarks,bookmarks))}{label(ifcontains(rev, revset("parents()"), "wip.here"), " {desc|firstline}")}'

topic_str = "{ifeq(topic, '', '', '[{topic}]')}"
bookmarks_str = "{join(bookmarks % 'B({bookmark})', ' ')}"
tags_str = "{join(tags % '{ifeq(tag, 'tip', '', 't({tag})')}', ' ')}"
node_str = "{ifeq(topicidx, '', '', 's{topicidx} ')}{node|short}"

list = "{label('changeset.{phase}', node_str)} {l_normal(topic_str)} {desc|firstline} {l_normal(tags_str)} {l_normal(bookmarks_str)} {instabilities}\n"

fulldesc = "{desc}\n"

[bundleclone]
prefers = uc2region=us-west-1

[color]
mode = terminfo
#mode = ansi

#Custom colours
color.orange = 202
color.lightyellow = 191
color.darkorange = 220
color.brightyellow = 226

#Colours for each label
log.branch = cyan
log.summary = lightyellow
log.description = lightyellow
log.bookmark = green
log.tag = darkorange
log.graph = blue

changeset.public = orange bold
changeset.secret = blue bold
changeset.draft = brightyellow bold

desc.here = bold blue_background

diff.trailingwhitespace = bold red_background
qseries.applied = yellow bold underline
qseries.unapplied = bold

wip.bookmarks = yellow underline
wip.branch = yellow
wip.draft = green
wip.here = red
wip.obsolete = none
wip.public = blue
wip.tags = yellow
wip.user = magenta

[rebase]
# Turned this off because it can causes topics to disappear during rebase.
# (as of evolve 8.4.0-ish.)
#
# re-enabling to see if it is better now.
experimental.inmemory = true

[extdiff]
# <mossop> adds a hg vsd command to open side by side diffs of individual files
# in VS Code.
vsd = code --wait --diff

# difftastic, with paged colors
df = difft
df.paged-command-options = --color=always

[experimental]
graphshorten = true
worddiff = true

[hggit]
usephases = True

[phabsend]
setbaseparent = true
basepolicy = samebug
#basepolicy = any
amend = true

# Personal configuration is in ~/.config/hg/hgrc
