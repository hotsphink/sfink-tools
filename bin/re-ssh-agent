#!/usr/bin/perl -w

my $pidof = "/bin/pidof";
$pidof = "/sbin/pidof" if ! -x $pidof;

# Find the ssh-agent pid.
chomp(my $pids = `$pidof ssh-agent`);
my @pids = split(/ /, $pids);
if (@pids == 0) {
  exec("/usr/bin/ssh-agent") or die "Cannot run ssh-agent";
} elsif (@pids > 1) {
  print STDERR "Multiple ssh-agent processes found.\n";
}

my $pid = $pids[0];

my @socks = glob("/tmp/ssh-*/agent.*");
my $sock;

my @ssh_socks;

if (@socks == 1) {
    ($sock) = @socks;
} elsif (@socks > 1) {
    SOCKSEARCH: for my $s (@socks) {
        my ($sock_pid) = $s =~ /agent.(\d+)$/;
	if (! $pid) {
	    # Check for SSH-forwarded agent
	    chomp(my $exe = qx(sudo readlink /proc/$sock_pid/exe/ 2>&1));
	    if ($exe =~ /\bsshd$/) {
		push @ssh_socks, $s;
	    }
	    next SOCKSEARCH;
	}

	# Check whether candidate socket pid is the process listed
	# after --exit-with-session
	my $cmd = qx(cat /proc/$pid/cmdline);
	my @cmd = split(/\0/, $cmd);
	for (0 .. $#cmd) {
	    if ($cmd[$_] eq '--exit-with-session') {
		my $control_cmd = $cmd[$_+1];
		if (qx(ps ww $sock_pid) =~ /\Q$control_cmd\E/) {
		    $sock = $_;
		    last SOCKSEARCH;
		}
	    }
	}

        # Find the agent socket from lsof output.
        #my $self = $$;
        #my ($shell) = `cat /proc/$self/status` =~ /PPid:\s*(\d+)/;
        #my ($sshd) = `cat /proc/$shell/status` =~ /PPid:\s*(\d+)/;
        ($sock) = `sudo lsof -p $sock_pid 2>/dev/null` =~ m!(/tmp/ssh-XXX\w+/agent\.\d+)!;
        last SOCKSEARCH if ($sock);

	# $sock_pid is ancestor of $pid?
	my $p = $pid;
	while ($p != 1) {
	    if ($p == $sock_pid) {
		$sock = $_;
		last SOCKSEARCH;
	    }
	    if (qx(ps --no-heading -o ppid $p) =~ /(\d+)/) {
		$p = $1;
	    } else {
		last;
	    }
	}
    }
}

if (!$sock && @ssh_socks == 1) {
    ($sock) = @ssh_socks;
}

if (defined $sock) {
    print "SSH_AUTH_SOCK=$sock; export SSH_AUTH_SOCK\n";
} else {
    if ($pid) {
	die "Unable to find socket for ssh-agent pid $pid";
    } else {
	die "Unable to find ssh-forwarded socket";
    }
}

if (defined $pid) {
    print "SSH_AGENT_PID=$pid; export SSH_AGENT_PID\n";
}
